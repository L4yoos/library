version: '3.8'

services:
  postgres_db:
    image: postgres:16-alpine
    container_name: library_postgres_db
    environment:
      POSTGRES_DB: library_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  book-service:
    build:
      context: ./book-service
      dockerfile: Dockerfile
    container_name: library_book_service
    ports:
      - "8880:8880"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/library_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      postgres_db:
        condition: service_healthy

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: library_user_service
    ports:
      - "8881:8881"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/library_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    depends_on:
      postgres_db:
        condition: service_healthy

  loan-service:
    build:
      context: ./loan-service
      dockerfile: Dockerfile
    container_name: library_loan_service
    ports:
      - "8882:8882"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/library_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      book-service.url: http://book-service:8880/api/books
      user-service.url: http://user-service:8881/api/users
    depends_on:
      postgres_db:
        condition: service_healthy
      book-service:
        condition: service_started
      user-service:
        condition: service_started

volumes:
  postgres_data: